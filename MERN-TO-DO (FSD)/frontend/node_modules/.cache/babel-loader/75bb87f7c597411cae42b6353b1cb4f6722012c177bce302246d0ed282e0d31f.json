{"ast":null,"code":"var _jsxFileName = \"D:\\\\git\\\\MERN-TO-DO (FSD)\\\\frontend\\\\src\\\\Components\\\\ToDoForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { addNewTodo } from \"../Redux/actions\";\nimport { useDispatch } from \"react-redux\";\n\n// Redux is a databse for frontend \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ToDoForm = () => {\n  _s();\n  const dispatch = useDispatch();\n\n  // we are using state to store the value of input field  \n\n  const [text, setText] = useState(\"\");\n\n  // we use onformsubmit to handle page refresh \n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    dispatch(addNewTodo(text));\n    setText(\"\");\n  };\n\n  // we used onInputChange to find out the value written inn input field \n\n  const onInputChange = e => {\n    // console.log(e.target.value)\n    setText(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"submit\",\n    className: \"form\",\n    onSubmit: onFormSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your todo....\",\n      className: \"input\",\n      onChange: onInputChange,\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(ToDoForm, \"G+3jVwq8dI9wF0AT8SznHbzUOJQ=\", false, function () {\n  return [useDispatch];\n});\n_c = ToDoForm;\nexport default ToDoForm;\nvar _c;\n$RefreshReg$(_c, \"ToDoForm\");","map":{"version":3,"names":["useState","addNewTodo","useDispatch","jsxDEV","_jsxDEV","ToDoForm","_s","dispatch","text","setText","onFormSubmit","e","preventDefault","onInputChange","target","value","action","className","onSubmit","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/git/MERN-TO-DO (FSD)/frontend/src/Components/ToDoForm.jsx"],"sourcesContent":["import { useState } from \"react\"\nimport { addNewTodo } from \"../Redux/actions\"\nimport { useDispatch } from \"react-redux\"\n\n// Redux is a databse for frontend \n\nconst ToDoForm = () => {\n\n    const dispatch = useDispatch();\n\n    // we are using state to store the value of input field  \n\n    const[text,setText] = useState(\"\")\n\n    // we use onformsubmit to handle page refresh \n\n    const onFormSubmit = (e) =>{\n        e.preventDefault();\n        dispatch(addNewTodo(text))\n        setText(\"\")\n    }\n\n    // we used onInputChange to find out the value written inn input field \n\n    const onInputChange = (e) => {\n        // console.log(e.target.value)\n        setText(e.target.value)\n    }\n\n\n    return(\n        <form action=\"submit\" className=\"form\" onSubmit={onFormSubmit}>\n            <input type=\"text\" placeholder=\"Enter your todo....\" className=\"input\" onChange={onInputChange} value={text}/>\n        </form>\n    )\n}\n\nexport default ToDoForm;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,WAAW,QAAQ,aAAa;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB,MAAMC,QAAQ,GAAGL,WAAW,EAAE;;EAE9B;;EAEA,MAAK,CAACM,IAAI,EAACC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;;EAElC;;EAEA,MAAMU,YAAY,GAAIC,CAAC,IAAI;IACvBA,CAAC,CAACC,cAAc,EAAE;IAClBL,QAAQ,CAACN,UAAU,CAACO,IAAI,CAAC,CAAC;IAC1BC,OAAO,CAAC,EAAE,CAAC;EACf,CAAC;;EAED;;EAEA,MAAMI,aAAa,GAAIF,CAAC,IAAK;IACzB;IACAF,OAAO,CAACE,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;EAGD,oBACIX,OAAA;IAAMY,MAAM,EAAC,QAAQ;IAACC,SAAS,EAAC,MAAM;IAACC,QAAQ,EAAER,YAAa;IAAAS,QAAA,eAC1Df,OAAA;MAAOgB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,qBAAqB;MAACJ,SAAS,EAAC,OAAO;MAACK,QAAQ,EAAET,aAAc;MAACE,KAAK,EAAEP;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC3G;AAEf,CAAC;AAAApB,EAAA,CA7BKD,QAAQ;EAAA,QAEOH,WAAW;AAAA;AAAAyB,EAAA,GAF1BtB,QAAQ;AA+Bd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}