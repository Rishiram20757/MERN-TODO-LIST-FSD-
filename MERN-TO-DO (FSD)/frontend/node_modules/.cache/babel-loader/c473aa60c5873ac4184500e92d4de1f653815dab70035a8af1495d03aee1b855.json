{"ast":null,"code":"import axios from \"axios\";\nimport { ADDNEW_TODO, GETALL_TODO, TOGGLE_TODO, UPDATE_TODO, DELETE_TODO, TOGGLE_TAB } from \"./type\";\nconst API_URL = \"http://localhost:8000\";\nexport const addNewTodo = data => async dispatch => {\n  // Post is used to post a todo \n\n  try {\n    const res = await axios.post(`${API_URL}/todos`, {\n      data\n    });\n    dispatch({\n      type: ADDNEW_TODO,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(\"error in adding new ToDo\", error);\n  }\n};\nexport const getAllTodos = () => async dispatch => {\n  try {\n    const res = await axios.get(`${API_URL}/todos`);\n    dispatch({\n      type: GETALL_TODO,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(\"error while calling getalltodo api\", error);\n  }\n};\nexport const toggleTodo = id => async dispatch => {\n  try {\n    const res = await axios.get(`${API_URL}/todos/${id}`);\n    dispatch({\n      type: TOGGLE_TODO,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(\"error while calling getalltodo api\", error);\n  }\n};\nexport const updateTodo = (id, data) => async dispatch => {\n  try {\n    const res = await axios.put(`${API_URL}/todos/${id}`, {\n      data\n    });\n    dispatch({\n      type: UPDATE_TODO,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(\"error while calling Updatealltodo api\", error);\n  }\n};\nexport const deleteTodo = id => async dispatch => {\n  try {\n    const res = await axios.delete(`${API_URL}/todos/${id}`);\n    dispatch({\n      type: DELETE_TODO,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(\"error while calling deletealltodo api\", error);\n  }\n};\nexport const toggleTab = tab => async dispatch => {\n  dispatch({\n    type: TOGGLE_TAB,\n    selected: tab\n  });\n};","map":{"version":3,"names":["axios","ADDNEW_TODO","GETALL_TODO","TOGGLE_TODO","UPDATE_TODO","DELETE_TODO","TOGGLE_TAB","API_URL","addNewTodo","data","dispatch","res","post","type","payload","error","console","log","getAllTodos","get","toggleTodo","id","updateTodo","put","deleteTodo","delete","toggleTab","tab","selected"],"sources":["D:/git/MERN-TO-DO (FSD)/frontend/src/Redux/actions/index.js"],"sourcesContent":["import axios from \"axios\"\nimport { ADDNEW_TODO, GETALL_TODO,TOGGLE_TODO,UPDATE_TODO,DELETE_TODO,TOGGLE_TAB } from \"./type\";\nconst API_URL = \"http://localhost:8000\";\n\nexport const addNewTodo = (data) => async(dispatch) =>{\n\n    // Post is used to post a todo \n\n    try{\n\n      const res = await axios.post(`${API_URL}/todos`,{ data })\n      \n      dispatch(\n        { \n          type : ADDNEW_TODO,\n          payload : res.data \n        }\n      )\n    }catch(error){\n        console.log(\"error in adding new ToDo\",error)\n    }\n}\n\nexport const getAllTodos = () => async (dispatch)=>{\n  try{\n\n    const res = await axios.get(`${API_URL}/todos`)\n    \n    dispatch(\n      { \n        type : GETALL_TODO,\n        payload : res.data \n      }\n    )\n  }catch(error){\n      console.log(\"error while calling getalltodo api\",error)\n  }\n}\n\n\nexport const toggleTodo = (id) => async (dispatch)=>{\n  try{\n\n    const res = await axios.get(`${API_URL}/todos/${id}`)\n    \n    dispatch(\n      { \n        type : TOGGLE_TODO,\n        payload : res.data \n      }\n    )\n  }catch(error){\n      console.log(\"error while calling getalltodo api\",error)\n  }\n}\n\nexport const updateTodo = (id,data) => async (dispatch)=>{\n  try{\n\n    const res = await axios.put(`${API_URL}/todos/${id}`,{data})\n    \n    dispatch(\n      { \n        type : UPDATE_TODO,\n        payload : res.data \n      }\n    )\n  }catch(error){\n      console.log(\"error while calling Updatealltodo api\",error)\n  }\n}\n\nexport const deleteTodo = (id) => async (dispatch)=>{\n  try{\n\n    const res = await axios.delete(`${API_URL}/todos/${id}`)\n    \n    dispatch(\n      { \n        type : DELETE_TODO,\n        payload : res.data \n      }\n    )\n  }catch(error){\n      console.log(\"error while calling deletealltodo api\",error)\n  }\n}\n\nexport const toggleTab = (tab) => async (dispatch) => {\n  dispatch(\n    {\n      type:TOGGLE_TAB,\n      selected:tab\n    }\n  )\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,EAACC,WAAW,EAACC,WAAW,EAACC,WAAW,EAACC,UAAU,QAAQ,QAAQ;AAChG,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,OAAO,MAAMC,UAAU,GAAIC,IAAI,IAAK,MAAMC,QAAQ,IAAI;EAElD;;EAEA,IAAG;IAED,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAE,GAAEL,OAAQ,QAAO,EAAC;MAAEE;IAAK,CAAC,CAAC;IAEzDC,QAAQ,CACN;MACEG,IAAI,EAAGZ,WAAW;MAClBa,OAAO,EAAGH,GAAG,CAACF;IAChB,CAAC,CACF;EACH,CAAC,QAAMM,KAAK,EAAC;IACTC,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAACF,KAAK,CAAC;EACjD;AACJ,CAAC;AAED,OAAO,MAAMG,WAAW,GAAGA,CAAA,KAAM,MAAOR,QAAQ,IAAG;EACjD,IAAG;IAED,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACmB,GAAG,CAAE,GAAEZ,OAAQ,QAAO,CAAC;IAE/CG,QAAQ,CACN;MACEG,IAAI,EAAGX,WAAW;MAClBY,OAAO,EAAGH,GAAG,CAACF;IAChB,CAAC,CACF;EACH,CAAC,QAAMM,KAAK,EAAC;IACTC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAACF,KAAK,CAAC;EAC3D;AACF,CAAC;AAGD,OAAO,MAAMK,UAAU,GAAIC,EAAE,IAAK,MAAOX,QAAQ,IAAG;EAClD,IAAG;IAED,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACmB,GAAG,CAAE,GAAEZ,OAAQ,UAASc,EAAG,EAAC,CAAC;IAErDX,QAAQ,CACN;MACEG,IAAI,EAAGV,WAAW;MAClBW,OAAO,EAAGH,GAAG,CAACF;IAChB,CAAC,CACF;EACH,CAAC,QAAMM,KAAK,EAAC;IACTC,OAAO,CAACC,GAAG,CAAC,oCAAoC,EAACF,KAAK,CAAC;EAC3D;AACF,CAAC;AAED,OAAO,MAAMO,UAAU,GAAGA,CAACD,EAAE,EAACZ,IAAI,KAAK,MAAOC,QAAQ,IAAG;EACvD,IAAG;IAED,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACuB,GAAG,CAAE,GAAEhB,OAAQ,UAASc,EAAG,EAAC,EAAC;MAACZ;IAAI,CAAC,CAAC;IAE5DC,QAAQ,CACN;MACEG,IAAI,EAAGT,WAAW;MAClBU,OAAO,EAAGH,GAAG,CAACF;IAChB,CAAC,CACF;EACH,CAAC,QAAMM,KAAK,EAAC;IACTC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAACF,KAAK,CAAC;EAC9D;AACF,CAAC;AAED,OAAO,MAAMS,UAAU,GAAIH,EAAE,IAAK,MAAOX,QAAQ,IAAG;EAClD,IAAG;IAED,MAAMC,GAAG,GAAG,MAAMX,KAAK,CAACyB,MAAM,CAAE,GAAElB,OAAQ,UAASc,EAAG,EAAC,CAAC;IAExDX,QAAQ,CACN;MACEG,IAAI,EAAGR,WAAW;MAClBS,OAAO,EAAGH,GAAG,CAACF;IAChB,CAAC,CACF;EACH,CAAC,QAAMM,KAAK,EAAC;IACTC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAACF,KAAK,CAAC;EAC9D;AACF,CAAC;AAED,OAAO,MAAMW,SAAS,GAAIC,GAAG,IAAK,MAAOjB,QAAQ,IAAK;EACpDA,QAAQ,CACN;IACEG,IAAI,EAACP,UAAU;IACfsB,QAAQ,EAACD;EACX,CAAC,CACF;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}